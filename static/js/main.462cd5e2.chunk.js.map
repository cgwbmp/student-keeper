{"version":3,"sources":["components/form/index.module.css","store/students/setters.ts","store/students/index.ts","store/students/getters.ts","store/ui/state.ts","store/ui/setters.ts","store/ui/index.ts","store/ui/getters.ts","locale-storage/api.ts","locale-storage/students.ts","store/index.ts","constants.ts","components/layout/index.tsx","components/form/index.tsx","components/utils.ts","components/card/index.tsx","containers/editable-card/index.tsx","app.tsx","service-worker.ts","index.tsx","components/card/index.module.css","components/layout/index.module.css"],"names":["module","exports","add","state","action","payload","remove","filter","id","save","changedStudent","map","student","slice","createSlice","initialState","reducers","setters","actions","reducer","selectors","getters","showEditFormForStudents","showFormForNewStudent","startEditStudent","studentId","endEditStudent","startAddNewStudent","endAddNewStudent","supportLocaleStorage","window","localStorage","itemName","setStudents","students","name","data","setItem","JSON","stringify","currentStudents","getItem","parse","store","configureStore","studentsSlice","studentsReducer","uiReducer","preloadedState","subscribe","previousStudents","getState","score","Layout","props","children","onClickAdd","className","style","layout","layout__header","layout__title","layout__body","layout__footer","layout__button","type","onClick","defaultData","fullName","birthday","academicPerformance","Form","enumerable","cb","onCancel","onCreate","onSave","isEdit","useState","form","setForm","isInvalid","setIsInvalid","onSubmit","useCallback","event","preventDefault","Math","random","toString","onChange","target","newForm","Number","value","onClickCancel","undefined","form__field","htmlFor","key","checked","Object","keys","form__footer","form__button","disabled","join","Card","onEdit","onDelete","onClickEdit","onClickDelete","card","card__title","card__score","card__info","card__button","card__sep","EditableCard","isVisibleForm","useSelector","uiSelectors","dispatch","useDispatch","uiActions","studentsActions","App","studentsSelectors","isVisibleFormForNewStudent","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.462cd5e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__2tOhh\",\"form__field\":\"form_form__field__1uD6z\",\"form__field-label\":\"form_form__field-label__tOGeR\",\"form__field-input\":\"form_form__field-input__2atJH\",\"form__field-radio\":\"form_form__field-radio__3FAKQ\",\"form__button\":\"form_form__button__1hsuh\",\"form__button--secondary\":\"form_form__button--secondary__32UGV\"};","import { ReduxSetter } from '../types';\nimport { Student } from '../../types';\n\nconst add: ReduxSetter<Array<Student>, Student> = (state, action) => [\n  ...state,\n  action.payload,\n];\n\nconst remove: ReduxSetter<Array<Student>, string> = (state, action) => state\n  .filter(({ id }) => id !== action.payload);\n\nconst save: ReduxSetter<Array<Student>, Student> = (state, action) => {\n  const changedStudent = action.payload;\n  return state.map(student => (\n    (student.id === changedStudent.id) ? changedStudent : student\n  ));\n};\n\nexport {\n  add,\n  remove,\n  save,\n};\n","import { createSlice } from 'redux-starter-kit';\nimport * as setters from './setters';\nimport * as getters from './getters';\nimport { Student } from '../../types';\n\nconst slice = 'students';\n\nconst defaultState: Array<Student> = [];\n\nconst { actions, reducer } = createSlice({\n  initialState: defaultState,\n  reducers: setters,\n  slice,\n});\n\nconst selectors = {\n  get: (state: { [s: string]: any }) => getters.get(state[slice]),\n};\n\nexport default reducer;\nexport {\n  slice,\n  defaultState,\n  actions,\n  selectors,\n};\n","import { Student } from '../../types';\nimport { ReduxGetter } from '../types';\n\nconst get: ReduxGetter<Array<Student>, Array<Student>> = state => state;\n\nexport {\n  // eslint-disable-next-line\n  get,\n};\n","export interface State {\n  showEditFormForStudents: { [s: string]: boolean },\n  showFormForNewStudent: boolean,\n}\n\nconst initialState: State = {\n  showEditFormForStudents: {},\n  showFormForNewStudent: false,\n};\n\nexport default initialState;\n","import { ReduxSetter } from '../types';\nimport { State } from './state';\n\nconst startEditStudent: ReduxSetter<State, string> = (state, action) => {\n  const studentId: string = action.payload;\n  return {\n    ...state,\n    showEditFormForStudents: {\n      ...state.showEditFormForStudents,\n      [studentId]: true,\n    },\n  };\n};\n\nconst endEditStudent: ReduxSetter<State, string> = (state, action) => {\n  const studentId: string = action.payload;\n  return {\n    ...state,\n    showEditFormForStudents: {\n      ...state.showEditFormForStudents,\n      [studentId]: false,\n    },\n  };\n};\n\nconst startAddNewStudent: ReduxSetter<State> = state => ({\n  ...state,\n  showFormForNewStudent: true,\n});\n\nconst endAddNewStudent: ReduxSetter<State> = state => ({\n  ...state,\n  showFormForNewStudent: false,\n});\n\nexport {\n  startEditStudent,\n  endEditStudent,\n  startAddNewStudent,\n  endAddNewStudent,\n};\n","import { createSlice } from 'redux-starter-kit';\nimport initialState from './state';\nimport * as setters from './setters';\nimport * as getters from './getters';\n\nconst slice = 'ui';\n\nconst { actions, reducer } = createSlice({\n  initialState,\n  reducers: setters,\n  slice,\n});\n\nconst selectors = {\n  isVisibleEditFormStudent:\n    (state: { [s: string]: any }, id: string) => getters.isVisibleEditFormStudent(state[slice], id),\n  isVisibleFormForNewStudent:\n    (state: { [s: string]: any }) => getters.isVisibleFormForNewStudent(state[slice]),\n};\n\nexport default reducer;\nexport {\n  slice,\n  initialState,\n  actions,\n  selectors,\n};\n","import { State } from './state';\nimport { ReduxGetter } from '../types';\n\nconst isVisibleFormForNewStudent: ReduxGetter<State, boolean> = state => (\n  state.showFormForNewStudent\n);\n\nconst isVisibleEditFormStudent: ReduxGetter<State, boolean> = (state, id: string) => (\n  state.showEditFormForStudents[id]\n);\n\nexport {\n  isVisibleFormForNewStudent,\n  isVisibleEditFormStudent,\n};\n","const supportLocaleStorage: boolean = window && !!window.localStorage;\n\nfunction setItem(name: string, data: any): void {\n  if (!supportLocaleStorage) {\n    return;\n  }\n  localStorage.setItem(name, JSON.stringify(data));\n}\n\nfunction getItem(name: string): any {\n  if (!supportLocaleStorage) {\n    return null;\n  }\n  const data = localStorage.getItem(name);\n  return (data) ? JSON.parse(data) : null;\n}\n\nconst removeItem = (name: string): void => {\n  if (!supportLocaleStorage) {\n    return;\n  }\n  localStorage.removeItem(name);\n};\n\nexport {\n  setItem,\n  getItem,\n  removeItem,\n};\n","import { getItem, setItem } from './api';\nimport { Student } from '../types';\n\nconst itemName = 'students';\n\nfunction getStudents(): Array<Student> {\n  return getItem(itemName);\n}\n\nfunction setStudents(students: Array<Student>): void {\n  return setItem(itemName, students);\n}\n\nexport {\n  getStudents,\n  setStudents,\n};\n","import { configureStore } from 'redux-starter-kit';\nimport studentsReducer, { slice as studentsSlice } from './students';\nimport uiReducer, { slice as uiSlice } from './ui';\nimport { getStudents, setStudents } from '../locale-storage/students';\n\nconst students = getStudents() || [];\n\nconst store = configureStore({\n  reducer: {\n    [studentsSlice]: studentsReducer,\n    [uiSlice]: uiReducer,\n  },\n  preloadedState: {\n    [studentsSlice]: students,\n  },\n});\n\nlet currentStudents: typeof students;\nstore.subscribe(() => {\n  const previousStudents = currentStudents;\n  currentStudents = store.getState()[studentsSlice];\n  if (currentStudents !== previousStudents) {\n    setStudents(currentStudents);\n  }\n});\n\nexport default store;\n","export default null;\n\nexport enum score {\n  Poor = 1,\n  Fair,\n  Good,\n  VeryGood,\n  Excellent,\n}\n","import React from 'react';\nimport style from './index.module.css';\n\ninterface LayoutProps {\n  children?: React.ReactNode,\n  onClickAdd?: () => void,\n}\n\nconst Layout: React.FC<LayoutProps> = (props: LayoutProps) => {\n  const {\n    children,\n    onClickAdd,\n  } = props;\n\n  return (\n    <div className={style.layout}>\n      <header className={style.layout__header}>\n        <h1 className={style.layout__title}>\n          Students\n        </h1>\n      </header>\n      <section className={style.layout__body}>\n        {children}\n      </section>\n      <footer className={style.layout__footer}>\n        <button\n          className={style.layout__button}\n          type=\"button\"\n          onClick={onClickAdd}\n        >\n          Add student\n        </button>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useState, useCallback } from 'react';\nimport { score } from '../../constants';\nimport { Student } from '../../types';\nimport { mapEnum } from '../utils';\nimport style from './index.module.css';\n\ntype Data = {\n  fullName: string,\n  birthday: string,\n  academicPerformance: number,\n};\n\nconst defaultData = {\n  fullName: '',\n  birthday: '',\n  academicPerformance: 0,\n};\n\ninterface FormProps {\n  data?: Student | undefined,\n  onCreate?: (student: Student) => void,\n  onSave?: (student: Student) => void,\n  onCancel?: (id?: string) => void,\n}\n\nconst Form: React.FC<FormProps> = (props: FormProps) => {\n  const {\n    data = defaultData,\n    onCancel,\n    onCreate,\n    onSave,\n  } = props;\n\n  const isEdit = 'id' in data;\n\n  const [form, setForm] = useState<Data>(data as Data);\n\n  const [isInvalid, setIsInvalid] = useState<boolean>(true);\n\n  const onSubmit = useCallback((event: React.FormEvent) => {\n    event.preventDefault();\n    if (isInvalid) {\n      return;\n    }\n    const student: Student = {\n      id: ('id' in data) ? data.id : Math.random().toString(),\n      fullName: form.fullName,\n      birthday: form.birthday,\n      academicPerformance: form.academicPerformance,\n    };\n    setForm(defaultData);\n    if (isEdit) {\n      onSave && onSave(student);\n    } else {\n      onCreate && onCreate(student);\n    }\n  }, [form, data, isEdit, isInvalid, onCreate, onSave]);\n\n  const onChange = useCallback((event: React.FormEvent): void => {\n    const target = event.target as HTMLInputElement;\n    const newForm = {\n      ...form,\n      [target.name]: (target.name === 'academicPerformance')\n        ? Number(target.value)\n        : target.value,\n    };\n    setForm(newForm);\n    if (newForm.fullName && newForm.birthday) {\n      setIsInvalid(false);\n    } else {\n      setIsInvalid(true);\n    }\n  }, [form]);\n\n  const onClickCancel = useCallback((): void => {\n    onCancel && onCancel(('id' in data) ? data.id : undefined);\n  }, [data, onCancel]);\n\n  return (\n    <form\n      className={style.form}\n      name=\"student\"\n      onSubmit={onSubmit}\n    >\n      <label\n        className={style.form__field}\n        htmlFor=\"student-fullName\"\n      >\n        <span className={style['form__field-label']}>\n          Full Name\n        </span>\n        <input\n          className={style['form__field-input']}\n          id=\"student-fullName\"\n          name=\"fullName\"\n          value={form.fullName}\n          onChange={onChange}\n        />\n      </label>\n      <label\n        className={style.form__field}\n        htmlFor=\"student-name\"\n      >\n        <span className={style['form__field-label']}>\n          Birthday\n        </span>\n        <input\n          className={style['form__field-input']}\n          id=\"student-birthday\"\n          name=\"birthday\"\n          value={form.birthday}\n          type=\"date\"\n          onChange={onChange}\n        />\n      </label>\n      <fieldset className={style.form__field}>\n        <span className={style['form__field-label']}>\n          Academic Performance\n        </span>\n        {mapEnum(score, (value: number, key: string) => (\n          <label\n            className={style['form__field-radio']}\n            htmlFor={`student-academicPerformance-${key}`}\n            key={key}\n          >\n            <input\n              className={style['form__field-radio-input']}\n              id={`student-academicPerformance-${key}`}\n              name=\"academicPerformance\"\n              value={value}\n              checked={form.academicPerformance === value}\n              type=\"radio\"\n              onChange={onChange}\n            />\n            {key}\n          </label>\n        ))}\n      </fieldset>\n      <footer className={style.form__footer}>\n        <button className={style.form__button} type=\"submit\" disabled={isInvalid}>\n          {(isEdit) ? 'Save' : 'Add'}\n        </button>\n        <button\n          className={[style.form__button, style['form__button--secondary']].join(' ')}\n          type=\"button\"\n          onClick={onClickCancel}\n        >\n          Cancel\n        </button>\n      </footer>\n    </form>\n  );\n};\n\nexport default Form;\n","export default null;\n\ntype EnumType = { [s: number]: string };\n\nexport function mapEnum(enumerable: EnumType, cb: Function): Array<any> {\n  const keys: Array<string> = Object.keys(enumerable)\n    .filter(key => typeof enumerable[key as any] === 'number');\n  return keys.map(key => cb(enumerable[key as any], key));\n}\n","import React, { useCallback } from 'react';\nimport { Student } from '../../types';\nimport style from './index.module.css';\n\ninterface CardProps extends Student {\n  onEdit?: (id: string) => void,\n  onDelete?: (id: string) => void,\n}\n\nconst Card: React.FC<CardProps> = (props: CardProps) => {\n  const {\n    id,\n    fullName,\n    birthday,\n    academicPerformance,\n    onEdit,\n    onDelete,\n  } = props;\n\n  const onClickEdit = useCallback(() => {\n    onEdit && onEdit(id);\n  }, [id, onEdit]);\n\n  const onClickDelete = useCallback(() => {\n    onDelete && onDelete(id);\n  }, [id, onDelete]);\n\n  return (\n    <div className={style.card}>\n      <h4 className={style.card__title}>\n        {fullName}\n        {(academicPerformance) ? (\n          <span className={style.card__score}>\n            {`★ ${academicPerformance}`}\n          </span>\n        ) : null}\n      </h4>\n      <p className={style.card__info}>\n        {birthday}\n      </p>\n      <button className={style.card__button} type=\"button\" onClick={onClickEdit}>\n        Edit\n      </button>\n      <span className={style.card__sep}>\n        |\n      </span>\n      <button className={style.card__button} type=\"button\" onClick={onClickDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '../../components/card';\nimport Form from '../../components/form';\nimport {\n  actions as studentsActions,\n} from '../../store/students';\nimport {\n  selectors as uiSelectors,\n  actions as uiActions,\n} from '../../store/ui';\nimport { Student } from '../../types';\n\ninterface EditableCardProps extends Student {\n}\n\nconst EditableCard: React.FC<EditableCardProps> = (props: EditableCardProps) => {\n  const {\n    id,\n    fullName,\n    birthday,\n    academicPerformance,\n  } = props;\n\n  const isVisibleForm = useSelector<{}, boolean>(\n    state => uiSelectors.isVisibleEditFormStudent(state, id),\n  );\n\n  const dispatch = useDispatch();\n\n  const onEdit = useCallback((studentId: string) => {\n    dispatch(uiActions.startEditStudent(studentId));\n  }, [dispatch]);\n\n  const onCancel = useCallback((studentId?: string) => {\n    if (studentId) {\n      dispatch(uiActions.endEditStudent(studentId));\n    }\n  }, [dispatch]);\n\n  const onSave = useCallback((changedStudent: Student) => {\n    dispatch(uiActions.endEditStudent(changedStudent.id));\n    dispatch(studentsActions.save(changedStudent));\n  }, [dispatch]);\n\n  const onDelete = useCallback((studentId: string) => {\n    dispatch(studentsActions.remove(studentId));\n  }, [dispatch]);\n\n  return (\n    (isVisibleForm) ? (\n      <Form\n        key={id}\n        data={props}\n        onSave={onSave}\n        onCancel={onCancel}\n      />\n    ) : (\n      <Card\n        key={id}\n        id={id}\n        fullName={fullName}\n        birthday={birthday}\n        academicPerformance={academicPerformance}\n        onEdit={onEdit}\n        onDelete={onDelete}\n      />\n    )\n  );\n};\n\nexport default EditableCard;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Layout from './components/layout';\nimport Form from './components/form';\nimport EditableCard from './containers/editable-card';\nimport {\n  selectors as studentsSelectors,\n  actions as studentsActions,\n} from './store/students';\nimport {\n  selectors as uiSelectors,\n  actions as uiActions,\n} from './store/ui';\nimport { Student } from './types';\nimport './app.css';\n\nconst App: React.FC = () => {\n  const students = useSelector<{}, Array<Student>>(studentsSelectors.get);\n\n  const isVisibleFormForNewStudent = useSelector<{}, boolean>(\n    uiSelectors.isVisibleFormForNewStudent,\n  );\n\n  const dispatch = useDispatch();\n\n  const onClickAdd = useCallback(() => {\n    dispatch(uiActions.startAddNewStudent());\n  }, [dispatch]);\n\n  const onCreate = useCallback((student: Student) => {\n    dispatch(uiActions.endAddNewStudent());\n    dispatch(studentsActions.add(student));\n  }, [dispatch]);\n\n  const onCancel = useCallback(() => {\n    dispatch(uiActions.endAddNewStudent());\n  }, [dispatch]);\n\n  return (\n    <Layout\n      onClickAdd={onClickAdd}\n    >\n      {students.map(student => (\n        <EditableCard\n          key={student.id}\n          id={student.id}\n          fullName={student.fullName}\n          birthday={student.birthday}\n          academicPerformance={student.academicPerformance}\n        />\n      ))}\n      {(isVisibleFormForNewStudent) ? (\n        <Form\n          onCreate={onCreate}\n          onCancel={onCancel}\n        />\n      ) : null}\n    </Layout>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n/* eslint-enable */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './app';\nimport * as serviceWorker from './service-worker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__1Kv0Z\",\"in\":\"card_in__2wlpl\",\"card__title\":\"card_card__title__3bmKQ\",\"card__info\":\"card_card__info__Gtx1m\",\"card__score\":\"card_card__score__X2kJi\",\"card__button\":\"card_card__button__13Ibd\",\"card__sep\":\"card_card__sep__1see-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"layout_layout__3gFW3\",\"layout__header\":\"layout_layout__header__2lZ02\",\"layout__title\":\"layout_layout__title__1q61j\",\"layout__body\":\"layout_layout__body__3bm2t\",\"layout__footer\":\"layout_layout__footer__2_vpW\",\"layout__button\":\"layout_layout__button__DaWAL\"};"],"sourceRoot":""}